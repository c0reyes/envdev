# init script
$init = <<SCRIPT
#!/bin/bash

sudo apt -y update
sudo apt install -y curl gnupg2 git openjdk-11-jdk-headless
SCRIPT

# Gitea
$gitea = <<SCRIPT
#!/bin/bash

# https://docs.gitea.io/en-us/install-from-binary/
# Install
curl -q -Lo gitea https://dl.gitea.io/gitea/master/gitea-master-linux-amd64
chmod +x gitea

sudo mv gitea /usr/local/bin/
sudo adduser --system --shell /bin/bash --gecos "Git Version Control" --group --disabled-password --home /home/git git
sudo mkdir -p /var/lib/gitea/{custom,data,log}
sudo chown -R git:git /var/lib/gitea/
sudo chmod -R 750 /var/lib/gitea/
sudo mkdir /etc/gitea
sudo chown root:git /etc/gitea
sudo chmod 770 /etc/gitea

# Service
curl -q -Lo gitea.service https://raw.githubusercontent.com/go-gitea/gitea/master/contrib/systemd/gitea.service
sudo mv gitea.service /etc/systemd/system/
sudo systemctl enable gitea
sudo systemctl start gitea
SCRIPT

# Jenkins
$jenkins = <<SCRIPT
#!/bin/bash

# https://pkg.jenkins.io/debian-stable/
curl https://pkg.jenkins.io/debian-stable/jenkins.io.key | sudo apt-key add -
echo "deb https://pkg.jenkins.io/debian-stable binary/" | sudo tee -a /etc/apt/sources.list.d/jenkins.list

sudo apt -y update
sudo apt install -y jenkins

sudo systemctl enable jenkins
sudo systemctl start jenkins
SCRIPT

# Docker
$docker = <<SCRIPT
#!/bin/bash

sudo apt install -y apt-transport-https ca-certificates software-properties-common
curl https://download.docker.com/linux/debian/gpg | sudo apt-key add -
echo "deb [arch=amd64] https://download.docker.com/linux/debian $(lsb_release -cs) stable" | sudo tee -a /etc/apt/sources.list.d/docker.list
sudo apt update
sudo apt install -y docker-ce docker-ce-cli
sudo systemctl enable docker
sudo systemctl start docker
sudo usermod -aG docker vagrant
sudo docker run -d -p 5000:5000 --restart=always --name registry registry:2
SCRIPT

# Minikube
$minikube = <<SCRIPT
curl -q -Lo kubectl https://storage.googleapis.com/kubernetes-release/release/$(curl https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl
chmod +x kubectl
sudo mv kubectl /usr/local/bin/

curl -q -Lo minikube https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64
chmod +x minikube
sudo mv minikube /usr/local/bin/

echo "127.0.0.1 minikube minikube." | sudo tee -a /etc/hosts
mkdir -p $HOME/.minikube
mkdir -p $HOME/.kube
touch $HOME/.kube/config
export KUBECONFIG=$HOME/.kube/config

sudo chown -R $USER:$USER $HOME/.kube
sudo chown -R $USER:$USER $HOME/.minikube

cat <<EOF | tee -a /home/vagrant/.bashrc
export MINIKUBE_WANTUPDATENOTIFICATION=false
export MINIKUBE_WANTREPORTERRORPROMPT=false
export MINIKUBE_HOME=/home/vagrant
export CHANGE_MINIKUBE_NONE_USER=true
export KUBECONFIG=/home/vagrant/.kube/config
source <(kubectl completion bash)
EOF

sudo swapoff -a
cat /etc/fstab | grep -v swap | sudo tee /etc/fstab

source /home/vagrant/.bashrc

sudo -E minikube start --vm-driver=none

sudo chown -R $USER:$USER $HOME/.kube
sudo chown -R $USER:$USER $HOME/.minikube

# kubernetes ingress nginx
# https://kubernetes.io/docs/tasks/access-application-cluster/ingress-minikube/
# https://kubernetes.io/docs/concepts/services-networking/ingress/
minikube addons enable ingress

cat <<EOF | sudo tee /etc/motd

Minikube start/stop commands:

sudo -E minikube start --vm-driver=none
sudo -E minikube stop

Kubectl commands:

kubectl get all
kubectl delete deploy/simple-deployment svc/simple-service

Hello Minikube:

kubectl create deployment hello-minikube --image=k8s.gcr.io/echoserver:1.10
kubectl expose deployment hello-minikube --type=NodePort --port=8080
kubectl get pod
minikube service hello-minikube --url
curl <url>

Servers ports:

Gitea:              http://localhost:3000/
Jenkins:            http://localhost:8080/
Docker registry:    http://localhost:5000/
kubernetes Ingress: http://localhost:8000/

EOF

SCRIPT


Vagrant.configure("2") do |config|
  config.vm.box = "debian/buster64"
  config.vm.hostname = "pipeline"
  config.vm.synced_folder ".", "/vagrant", disabled: true

  config.vm.provision "shell", inline: $init, privileged: false
  config.vm.provision "shell", inline: $gitea, privileged: false
  config.vm.provision "shell", inline: $jenkins, privileged: false
  config.vm.provision "shell", inline: $docker, privileged: false
  config.vm.provision "shell", inline: $minikube, privileged: false

  config.vm.network :forwarded_port, guest: 5000, host: 5000
  config.vm.network :forwarded_port, guest: 3000, host: 3000
  config.vm.network :forwarded_port, guest: 80, host: 8000
  config.vm.network :forwarded_port, guest: 8080, host: 8080

  config.vbguest.auto_update = false

  config.vm.provider "virtualbox" do |v|
    v.memory = 2048
    v.cpus = 2
  end
end
